#======================================================================
# Project settings
#======================================================================
branches:
  only:
    - develop

language: cpp

services:
  - docker

before_install:
  - date
  - REPO_SOURCE_DIR=${TRAVIS_BUILD_DIR}/jcsda/src_repo

#  create the same file structure on Travis VM and Docker container
  - mkdir -p ${TRAVIS_BUILD_DIR}/jcsda/src_repo
# echo branch info
  - echo $TRAVIS_PULL_REQUEST
  - echo $TRAVIS_PULL_REQUEST_BRANCH
  - echo $TRAVIS_BRANCH
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
#======================================================================
# Clone all repos
#======================================================================

  - mkdir ${REPO_SOURCE_DIR}/wrf-hydro-bundle
  - cp CI/CMakeLists.txt ${REPO_SOURCE_DIR}/wrf-hydro-bundle/

  - if [ "$BRANCH" = "develop" ];
    then export BRANCH_FORK="release-stable";
    else export BRANCH_FORK=$BRANCH;
    fi

#  checkout for the same branch name in fckit
  - git clone https://github.com/jcsda/fckit.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/fckit
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/fckit
  - git checkout $BRANCH_FORK || echo "No branch named $BRANCH in fckit repo"; git checkout release-stable
  - cd $REPO_SOURCE_DIR

#  checkout for the same branch name in atlas
  - git clone https://github.com/jcsda/atlas.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/atlas
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/atlas
  - git checkout $BRANCH_FORK || echo "No branch named $BRANCH in atlas repo"; git checkout release-stable
  - cd $REPO_SOURCE_DIR

#  checkout for the same branch name in oops
  - git clone https://github.com/jcsda/oops.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/oops
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/oops
  - git checkout $BRANCH || echo "No branch named $BRANCH in oops repo"
  - cd $REPO_SOURCE_DIR

#  checkout for the same branch name in saber
  - git clone https://github.com/jcsda/saber.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/saber
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/saber
  - git checkout $BRANCH || echo "No branch named $BRANCH in saber repo"
  - cd $REPO_SOURCE_DIR

#  checkout for the same branch name in ioda
  - git clone https://github.com/jcsda/ioda.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/ioda
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/ioda
  - git checkout $BRANCH || echo "No branch named $BRANCH in ioda repo"
  - cd $REPO_SOURCE_DIR

#  checkout for the same branch name in ioda-converters
  - git clone https://github.com/jcsda/ioda-converters.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/ioda-converters
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/ioda-converters
  - git checkout $BRANCH || echo "No branch named $BRANCH in ioda-converters repo"
  - cd $REPO_SOURCE_DIR

#  checkout for the same branch name in ufo
  - git clone https://github.com/jcsda/ufo.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/ufo
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/ufo
  - git checkout $BRANCH || echo "No branch named $BRANCH in ufo repo"
  - cd $REPO_SOURCE_DIR

#  clone the testing branch of wrf_hydro_nwm_jedi
  - git clone -b $BRANCH https://github.com/jcsda/wrf_hydro_nwm_jedi.git ${REPO_SOURCE_DIR}/wrf-hydro-bundle/wrf_hydro_nwm_jedi

#  do no switch to develop branch by removing 
#  develop UPDATE in CMakeLists.txt in wrf-hydro-bundle

  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle
  - sed -i 's/UPDATE BRANCH develop//' CMakeLists.txt
  - sed -i 's/UPDATE BRANCH release-stable//' CMakeLists.txt
  - cat CMakeLists.txt
  - cd ${REPO_SOURCE_DIR}
  - ls ${REPO_SOURCE_DIR}
  - ls ${REPO_SOURCE_DIR}/wrf-hydro-bundle
  - find . -name \* -exec chmod 777 {} \;

#======================================================================
# get docker image
# FROM  jcsda/docker:latest
#======================================================================
  - cd ${REPO_SOURCE_DIR}/wrf-hydro-bundle/wrf_hydro_nwm_jedi/CI
  - docker build -t jcsda/dockerl2 --build-arg=Dockerfile .  #Dockerfile handles ssh for mpi
  - date
  - docker images
# request codecov to detect CI environment to pass through to docker
  - ci_env=`bash <(curl -s https://codecov.io/env)`
  - echo $ci_env
  - docker run -d -t $ci_env --name jcsda_container -v ${REPO_SOURCE_DIR}/wrf-hydro-bundle:/jcsda/src_repo jcsda/dockerl2
  - docker ps -a
  - date

#======================================================================
# Here are the run steps
#======================================================================
script:
  - docker exec jcsda_container ls
  - docker exec jcsda_container bash -c 'cp -r /jcsda/.openmpi/ ~/' 
##  use cmake with flags to generate test coverage reports
  - date
  - docker exec jcsda_container bash -c 'cd /build_container && cmake -DCMAKE_MODULE_PATH=/usr/local/share/ecbuild/cmake/ -DCMAKE_BUILD_TYPE=Debug -DENABLE_GPROF=ON  /jcsda/src_repo'
  - date
  - docker exec jcsda_container bash -c 'cd /build_container/wrf_hydro_nwm_jedi && make -j4'
  - date
  - docker exec jcsda_container bash -c 'cd /build_container/wrf_hydro_nwm_jedi && ctest'
  - date
#upload to codecov
  - docker exec jcsda_container bash -c 'cd /build_container/wrf_hydro_nwm_jedi && ls'
  - docker exec jcsda_container bash -c 'cd /build_container/wrf_hydro_nwm_jedi && bash <(curl -s https://codecov.io/bash) -t d0e152dd-23f4-4202-8863-968657236555 -R /jcsda/src_repo/wrf_hydro_nwm_jedi/'
